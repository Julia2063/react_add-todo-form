{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","App","getUser","param","usersFromServer","find","todosFromServer","useState","newTodoTitle","setNewTodoTitle","newTodoUserName","setNewTodoUserName","renderedTodos","setRenderedTodos","needCheck","setNeedCheck","action","method","onSubmit","event","preventDefault","newTodoUser","newTodo","Math","max","length","type","placeholder","value","onChange","target","rightValue","trim","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b26b3ad6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\n\ninterface Props {\n  user: User;\n}\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList__item\">\n    {todos.map(todo => (\n      <li key={todo.id}>\n        <TodoInfo\n          todo={todo}\n        />\n      </li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nexport const App: React.FC = () => {\n  const getUser = (param: number | string): User | null => {\n    const foundUser\n      = typeof param === 'number'\n        ? usersFromServer.find(user => user.id === param)\n        : usersFromServer.find(user => user.name === param);\n\n    return foundUser || null;\n  };\n\n  const todos: Todo[] = todosFromServer.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [newTodoUserName, setNewTodoUserName] = useState('');\n  const [renderedTodos, setRenderedTodos] = useState(todos);\n  const [needCheck, setNeedCheck] = useState(false);\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n    const rightValue = value.trim().length > 0\n      ? value.replace(/[^a-zA-ZА-Яа-я0-9\\s]/, '')\n      : '';\n\n    setNewTodoTitle(rightValue);\n  };\n\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setNewTodoUserName(value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const newTodoUser: User | null = getUser(newTodoUserName);\n    const newTodo: Todo = {\n      id: Math.max(...renderedTodos.map(todo => todo.id)) + 1,\n      title: newTodoTitle,\n      userId: newTodoUser ? newTodoUser.id : null,\n      completed: false,\n      user: newTodoUser,\n    };\n\n    setNeedCheck(true);\n    if (newTodoTitle.length && newTodoUserName.length) {\n      setRenderedTodos([...renderedTodos, newTodo]);\n      setNewTodoTitle('');\n      setNewTodoUserName('');\n      setNeedCheck(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label>\n            Title:\n            {' '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={newTodoTitle}\n              onChange={handleChangeInput}\n            />\n            {(!newTodoTitle.length && needCheck)\n              && (<span className=\"error\">Please enter a title</span>)}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              value={newTodoUserName}\n              onChange={handleChangeSelect}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.name}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n            {(!newTodoUserName.length && needCheck)\n              && (<span className=\"error\">Please choose a user</span>)}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={renderedTodos} />\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}